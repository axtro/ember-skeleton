APPNAME = 'ember-skeleton'

require 'json'
require 'rake-pipeline-web-filters'

WebFilters = Rake::Pipeline::Web::Filters

class LoaderFilter < WebFilters::MinispadeFilter
end

class EmberAssertFilter < Filter
  def generate_output(inputs, output)
    inputs.each do |input|
      result = input.read
      result.gsub!(/ember_assert\((.*)\);/, '')
      output.write(result)
    end
  end
end


output 'assets'

input 'app' do
  match 'lib/**/*.js' do
    filter LoaderFilter,
      :module_id_generator => proc { |input|
        input.path.sub(/^lib\//, "#{APPNAME}/").sub(/\.js$/, '')
      },
      :string => true,
      :rewrite_requires => true

    if ENV['RAKEP_MODE'] == 'production'
      filter EmberAssertFilter
      uglify {|input| input}
    end
    concat 'app.js'
  end

  match 'vendor/**/*.js' do
    filter LoaderFilter,
      :module_id_generator => proc { |input|
        input.path.sub(/^vendor\//, '').sub(/\.js$/, '')
      },
      :string => true,
      :rewrite_requires => true

    if ENV['RAKEP_MODE'] == 'production'
      filter EmberAssertFilter
      uglify {|input| input}
    end
    concat %w[
      vendor/jquery.js
      vendor/ember.js
      vendor/ember-data.js
      vendor/sproutcore-routing.js
    ], 'app.js'
  end

  match 'modules/**/*.js' do
    if ENV['RAKEP_MODE'] == 'production'
      filter EmberAssertFilter
      uglify {|input| input}
    end
    concat 'app.js'
  end

  match 'plugins/**/*.js' do
    if ENV['RAKEP_MODE'] == 'production'
      uglify {|input| input}
    end
    concat do |input|
      input.sub(/plugins\//, '')
    end
  end

  match 'templates/**/*.handlebars' do
    filter WebFilters::HandlebarsFilter,
      :key_name_proc => proc { |input| input.path.sub(/^templates\//, '').sub(/\.handlebars$/, '') }
    filter LoaderFilter,
      :module_id_generator => proc { |input|
        input.path.sub(/^templates\//, "#{APPNAME}/~templates/").sub(/\.handlebars$/, '').sub(/\.js$/, '')
      },
      :string => true,
      :rewrite_requires => true
    if ENV['RAKEP_MODE'] == 'production'
      uglify {|input| input}
    end
    concat 'app.js'
  end

  match 'tests/**/*.js' do
    filter LoaderFilter,
      :module_id_generator => proc { |input|
        input.path.sub(/^lib\//, "#{APPNAME}/").sub(/\.js$/, '')
      },
      :string => true,
      :rewrite_requires => true
    concat 'app-tests.js'
  end

  match 'css/**/*.css' do
    if ENV['RAKEP_MODE'] == 'production'
      yui_css
    end
    concat ['bootstrap.css', 'main.css'], 'app.css'
  end

  match 'css/**/*.scss' do
    sass
    if ENV['RAKEP_MODE'] == 'production'
      yui_css
    end
    concat 'app.css'
  end

  match "static/**/*" do
    concat do |input|
      input.sub(/static\//, '')
    end
  end
end

# vim: filetype=ruby
